/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "AngularDistribution.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(AngularDistribution); 

 AngularDistribution::AngularDistribution(const char *name, const char *title, 
                        RooAbsReal& _ctheta,
                        RooAbsReal& _phi,
                        RooAbsReal& _g) :
   RooAbsPdf(name,title), 
   ctheta("ctheta","ctheta",this,_ctheta),
   phi("phi","phi",this,_phi),
   g("g","g",this,_g)
 { 
 } 


 AngularDistribution::AngularDistribution(const AngularDistribution& other, const char* name) :  
   RooAbsPdf(other,name), 
   ctheta("ctheta",this,other.ctheta),
   phi("phi",this,other.phi),
   g("g",this,other.g)
 { 
 } 



 Double_t AngularDistribution::evaluate() const
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE
  const double ctheta0 = ctheta;
  const double phi0 = phi;
  const double g0 = g;

  const double mElectron = 0.511e6;
  const double mLambda = 1116e6;
  const double bohrMagneton = 5.788e-5;
  const double hbar = 6.582e-16;
  const double c = 299792458.;
  const double Dy = 4.;
  const double beta = 1.;

  const double muB = bohrMagneton * mElectron / mLambda;
  const double phiRot = g0 * Dy * muB / (beta * hbar * c);

  const double szInitial = 1.;

  const double sx0 = - szInitial * std::sin(phiRot);
  const double sz0 = szInitial * std::cos(phiRot);
     
  double alpha0 = 0.732;

  double val = 1.+ alpha0 * (sx0 * std::sqrt(1-std::pow(ctheta0,2)) * std::cos(phi0) + sz0 * ctheta0);

  if(val < 0.){ return 0.; }

  return val;

 } 



